stages:
  - security
  - build
  - dckr_scan
  - k8s_deployment

variables:
  DOCKER_HOST: tcp://docker:2375
  CI_COMMIT_REF_SLUG :  latest

services:
  - docker:dind

.security_scan_template:
  stage: security
  image: node:14
  script:
    - echo "Running security scan sast"
    - npm install
    - npm audit --json > $SERVICE_NAME-service-security-report.json
  artifacts:
    paths:
      - $SERVICE_NAME/$SERVICE_NAME-service-security-report.json

security-sast_product:
  extends: .security_scan_template
  variables:
    SERVICE_NAME: "product"
  before_script:
    - cd product

security-sast_payment:
  extends: .security_scan_template
  variables:
    SERVICE_NAME: "payment"
  before_script:
    - cd payment

security-sast_order:
  extends: .security_scan_template
  variables:
    SERVICE_NAME: "order"
  before_script:
    - cd order

security-sast_e-commerce:
  extends: .security_scan_template
  variables:
    SERVICE_NAME: "fe-commerce"
  before_script:
    - cd e-commerce

security-sca:
  stage: security
  script:
    - echo "Running security scan sca"

.build_template:
  image: docker:latest
  stage: build
  before_script:
    - cd $SERVICE_NAME
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD 
    - docker build -t $CI_REGISTRY_IMAGE/$SERVICE_NAME .
    - docker images
    - docker push $CI_REGISTRY_IMAGE/$SERVICE_NAME .

product:
  extends: .build_template
  variables:
    SERVICE_NAME: "product"
  

payment:
  extends: .build_template
  variables:
    SERVICE_NAME: "payment"
   

order:
  extends: .build_template
  variables:
    SERVICE_NAME: "order"
   

e-commerce:
  extends: .build_template
  variables:
    SERVICE_NAME: "e-commerce"



docker_scan:
  image: docker:latest
  stage: dckr_scan
  script:
    - echo "Running dckr_scan"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker scan --login
    - docker pull $CI_REGISTRY_USER/product
    - docker scan $CI_REGISTRY_USER/product
    - docker pull $CI_REGISTRY_USER/payment
    - docker scan $CI_REGISTRY_USER/payment
    - docker pull $CI_REGISTRY_USER/order
    - docker scan $CI_REGISTRY_USER/order
    - docker pull $CI_REGISTRY_USER/e-commerce
    - docker scan $CI_REGISTRY_USER/e-commerce

k8s_deployment:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - echo "Deploying to Kubernetes"
    - kubectl config get-contexts
    - kubectl config use-context yaya2345/services:primary-agent
    - kubectl apply -f ./release/kubernetes-manifests.yml




